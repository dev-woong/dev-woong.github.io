<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Dev-Woong 🚀</title>
        <link>https://dev-woong.io/</link>
        <description>Recent content on Dev-Woong 🚀</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ko-kr</language>
        <lastBuildDate>Sun, 21 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://dev-woong.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>[BAEKJOON] 1032 - 명령 프롬프트</title>
        <link>https://dev-woong.io/p/baekjoon-1032-%EB%AA%85%EB%A0%B9-%ED%94%84%EB%A1%AC%ED%94%84%ED%8A%B8/</link>
        <pubDate>Sun, 21 Aug 2022 00:00:00 +0000</pubDate>
        
        <guid>https://dev-woong.io/p/baekjoon-1032-%EB%AA%85%EB%A0%B9-%ED%94%84%EB%A1%AC%ED%94%84%ED%8A%B8/</guid>
        <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.acmicpc.net/problem/1032&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.acmicpc.net/problem/1032&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;입력된 동일한 길이의 문자열에서 문자가 다른 인덱스의 값을 &amp;lsquo;?&amp;lsquo;로 변경하여 출력하는 문제&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 개수 입력&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_count&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ReadLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// input_count 개수만큼 추가로 입력(CharArray 형태로 Return)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_list&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Enumerable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Convert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ToInt32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ReadLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()?.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ToCharArray&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ToList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 0번 인덱스의 값을 기준값으로 지정&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 입력받은 값의 리스트를 순환하여 반복&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;check_string&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;// 입력받은 문자열 각각을 비교하기 위해 Length 값 만큼 반복&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;!.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;++)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;c1&#34;&gt;// 문자열의 각 문자가 같으면 반복을 이어나간다.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;check_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;![&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;c1&#34;&gt;// 문자열의 각 문자가 틀리면 해당 문자를 &amp;#39;?&amp;#39;로 치환한다.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WriteLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://hits.seeyoufarm.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fdev-woong.io%2F2022.08.21-0003&amp;amp;count_bg=%233D91C8&amp;amp;title_bg=%23555555&amp;amp;icon=&amp;amp;icon_color=%23E7E7E7&amp;amp;title=%EC%A1%B0%ED%9A%8C%EC%88%98&amp;amp;edge_flat=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Hits&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>[BAEKJOON] 10828 - 스택</title>
        <link>https://dev-woong.io/p/baekjoon-10828-%EC%8A%A4%ED%83%9D/</link>
        <pubDate>Sun, 21 Aug 2022 00:00:00 +0000</pubDate>
        
        <guid>https://dev-woong.io/p/baekjoon-10828-%EC%8A%A4%ED%83%9D/</guid>
        <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.acmicpc.net/problem/10828&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.acmicpc.net/problem/10828&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;스택 및 스택 명령어를 구현하여 데이터를 입/출력하는 문제&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 명령어의 개수 입력&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;command_count&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ReadLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()!);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Stack으로 사용될 변수 생성&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 명령어 개수 만큼 반복&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;// 명령어 입력 후 공백(&amp;#34; &amp;#34;)을 기준으로 분리&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ReadLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()!.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;// 공백 기준 앞에 있는 명령어를 통한 switch 조건 분기&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;push&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;c1&#34;&gt;// stack 변수에 데이터 축적&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;pop&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;c1&#34;&gt;// Stack의 특성에 따라 후입선출하여 마지막 데이터부터 pop!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;c1&#34;&gt;// Any() 함수는 조건에 맞는 값이 해당 컬렉션에 존재하는지 확인하는 함수이다.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;c1&#34;&gt;// 매개변수가 없는 경우는 컬렉션에 값이 존재하는지 여부를 반환한다.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WriteLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Any&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Last&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ToString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;-1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Any&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RemoveAt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Count&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WriteLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ToString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;empty&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WriteLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Any&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;top&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;c1&#34;&gt;// Linq의 Last()를 이용하여 마지막 값을 반환받는다.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WriteLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Any&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Last&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ToString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;-1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://hits.seeyoufarm.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fdev-woong.io%2F2022.08.21-0004&amp;amp;count_bg=%233D91C8&amp;amp;title_bg=%23555555&amp;amp;icon=&amp;amp;icon_color=%23E7E7E7&amp;amp;title=%EC%A1%B0%ED%9A%8C%EC%88%98&amp;amp;edge_flat=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Hits&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>[BAEKJOON] 10845 - 큐</title>
        <link>https://dev-woong.io/p/baekjoon-10845-%ED%81%90/</link>
        <pubDate>Sun, 21 Aug 2022 00:00:00 +0000</pubDate>
        
        <guid>https://dev-woong.io/p/baekjoon-10845-%ED%81%90/</guid>
        <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.acmicpc.net/problem/10845&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.acmicpc.net/problem/10845&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;스택 및 스택 명령어를 구현하여 데이터를 입/출력하는 문제&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 명령어의 개수 입력&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;command_count&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ReadLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()!);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Queue로 사용될 변수 생성&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 명령어 개수 만큼 반복&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;// 명령어 입력 후 공백(&amp;#34; &amp;#34;)을 기준으로 분리&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ReadLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()!.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;// 공백 기준 앞에 있는 명령어를 통한 switch 조건 분기&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;push&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;c1&#34;&gt;// queue 변수에 데이터 축적&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;pop&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;c1&#34;&gt;// Queue의 특성에 따라 선입선출하여 처음 데이터부터 pop!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;c1&#34;&gt;// Any() 함수는 조건에 맞는 값이 해당 컬렉션에 존재하는지 확인하는 함수이다.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;c1&#34;&gt;// 매개변수가 없는 경우는 컬렉션에 값이 존재하는지 여부를 반환한다.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WriteLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Any&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;First&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ToString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;-1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Any&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RemoveAt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WriteLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ToString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;empty&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WriteLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Any&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;front&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;c1&#34;&gt;// Linq의 First()를 이용하여 첫 번째 값을 반환받는다.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WriteLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Any&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;First&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ToString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;-1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;back&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;c1&#34;&gt;// Linq의 Last()를 이용하여 마지막 값을 반환받는다.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WriteLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Any&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Last&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ToString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;-1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://hits.seeyoufarm.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fdev-woong.io%2F2022.08.21-0005&amp;amp;count_bg=%233D91C8&amp;amp;title_bg=%23555555&amp;amp;icon=&amp;amp;icon_color=%23E7E7E7&amp;amp;title=%EC%A1%B0%ED%9A%8C%EC%88%98&amp;amp;edge_flat=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Hits&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>[BAEKJOON] 10872 - 팩토리얼</title>
        <link>https://dev-woong.io/p/baekjoon-10872-%ED%8C%A9%ED%86%A0%EB%A6%AC%EC%96%BC/</link>
        <pubDate>Sun, 21 Aug 2022 00:00:00 +0000</pubDate>
        
        <guid>https://dev-woong.io/p/baekjoon-10872-%ED%8C%A9%ED%86%A0%EB%A6%AC%EC%96%BC/</guid>
        <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.acmicpc.net/problem/10872&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.acmicpc.net/problem/10872&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;입력받은 정수만큼 팩토리얼 연산을 수행하는 문제&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 팩토리얼 개수 입력&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Convert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ToInt32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ReadLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Enumerable.Range()를 통해 1부터 {count}개의 차례대로 증가되는 컬렉션을 생성&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 해당 컬렉션의 값을 Linq의 Aggregate 함수를 통해 집계&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 컬렉션에 데이터가 없는 경우 1을 sum에 저장, 데이터가 있는 경우 i에 차례대로 할당되어 연산 수행&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 연산의 결과값이 current에 누적되어 최종 결과값이 sum에 저장됨&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Enumerable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Aggregate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;current&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WriteLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://hits.seeyoufarm.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fdev-woong.io%2F2022.08.21-0002&amp;amp;count_bg=%233D91C8&amp;amp;title_bg=%23555555&amp;amp;icon=&amp;amp;icon_color=%23E7E7E7&amp;amp;title=%EC%A1%B0%ED%9A%8C%EC%88%98&amp;amp;edge_flat=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Hits&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>[BAEKJOON] 1550 - 16진수 변환</title>
        <link>https://dev-woong.io/p/baekjoon-1550-16%EC%A7%84%EC%88%98-%EB%B3%80%ED%99%98/</link>
        <pubDate>Sun, 21 Aug 2022 00:00:00 +0000</pubDate>
        
        <guid>https://dev-woong.io/p/baekjoon-1550-16%EC%A7%84%EC%88%98-%EB%B3%80%ED%99%98/</guid>
        <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.acmicpc.net/problem/1550&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.acmicpc.net/problem/1550&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;입력받은 16진수 문자열을 10진수로 출력해주는 문제.&lt;/p&gt;
&lt;p&gt;C#에서의 진수 변환에 대해 알아보는 개념으로 풀어보았습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 입력&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ReadLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 16진수 변환&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hex&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Convert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ToInt32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 출력&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WriteLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://hits.seeyoufarm.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fdev-woong.io%2F2022.08.21-0001&amp;amp;count_bg=%233D91C8&amp;amp;title_bg=%23555555&amp;amp;icon=&amp;amp;icon_color=%23E7E7E7&amp;amp;title=%EC%A1%B0%ED%9A%8C%EC%88%98&amp;amp;edge_flat=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Hits&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>[TIL] Tilemap 기초</title>
        <link>https://dev-woong.io/p/til-tilemap-%EA%B8%B0%EC%B4%88/</link>
        <pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate>
        
        <guid>https://dev-woong.io/p/til-tilemap-%EA%B8%B0%EC%B4%88/</guid>
        <description>&lt;img src="https://dev-woong.io/p/til-tilemap-%EA%B8%B0%EC%B4%88/title.jpg" alt="Featured image of post [TIL] Tilemap 기초" /&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=9Y0bUhwxRyk&amp;amp;list=PLC2Tit6NyVie46nbdEM00wFoojjRlXIcf&amp;amp;index=10&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;고박사의 유니티 노트 [Unity 2D Basic] 06-01. 2D Tilemap Editor&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;tilemap-editor&#34;&gt;Tilemap Editor&lt;/h2&gt;
&lt;h3 id=&#34;tilemap-palette&#34;&gt;Tilemap Palette&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Tilemap 오브젝트에 배치할 때는 Tile Asset들을 등록해두는 저장소&lt;/li&gt;
&lt;li&gt;팔레트에 있는 Tile Asset을 여러 속성에 따라 배치하거나 삭제할 수 있음&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;grid-오브젝트&#34;&gt;Grid 오브젝트&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;자식으로 배치되는 Tilemap 오브젝트들을 관리하는 역할&lt;/li&gt;
&lt;li&gt;Cell Layout, Cell Swizzle 정보를 이용해 배치되는 맵의 방식을 Rectangle, Hexagon, Isometric, Isometric Z As Y 등으로 설정할 수 있음&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tilemap-오브젝트&#34;&gt;Tilemap 오브젝트&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Tile Asset을 배치하는 공간으로 실제 게임에 보여지는 타일 형태의 월드&lt;/li&gt;
&lt;li&gt;Grid 오브젝트의 자식으로 여러 개의 Tilemap 오브젝트 등록 가능 (Layer 구분)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://dev-woong.io/p/til-tilemap-%EA%B8%B0%EC%B4%88/1.png&#34;
	width=&#34;792&#34;
	height=&#34;1338&#34;
	srcset=&#34;https://dev-woong.io/p/til-tilemap-%EA%B8%B0%EC%B4%88/1_hu5ed4746f131d37c310c4c6154cd19161_281080_480x0_resize_box_3.png 480w, https://dev-woong.io/p/til-tilemap-%EA%B8%B0%EC%B4%88/1_hu5ed4746f131d37c310c4c6154cd19161_281080_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;상단 메뉴 &amp;gt; Windows &amp;gt; 2D &amp;gt; Tile Palette&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;59&#34;
		data-flex-basis=&#34;142px&#34;
	
&gt;
&lt;img src=&#34;https://dev-woong.io/p/til-tilemap-%EA%B8%B0%EC%B4%88/2.png&#34;
	width=&#34;642&#34;
	height=&#34;1202&#34;
	srcset=&#34;https://dev-woong.io/p/til-tilemap-%EA%B8%B0%EC%B4%88/2_hu972edd9e50240e32d3da5702f5dab5eb_60834_480x0_resize_box_3.png 480w, https://dev-woong.io/p/til-tilemap-%EA%B8%B0%EC%B4%88/2_hu972edd9e50240e32d3da5702f5dab5eb_60834_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Tile Palette 메뉴&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;53&#34;
		data-flex-basis=&#34;128px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;강의와 현재의 편차가 있는 듯 한데, 해당 차이점 등에 대해 이해 후 다시 포스팅 하겠습니다.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://hits.seeyoufarm.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fdev-woong.io%2F2022.08.17-02&amp;amp;count_bg=%233D91C8&amp;amp;title_bg=%23555555&amp;amp;icon=&amp;amp;icon_color=%23E7E7E7&amp;amp;title=%EC%A1%B0%ED%9A%8C%EC%88%98&amp;amp;edge_flat=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Hits&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>[TIL] Sprite, Animation 기초</title>
        <link>https://dev-woong.io/p/til-sprite-animation-%EA%B8%B0%EC%B4%88/</link>
        <pubDate>Tue, 16 Aug 2022 00:00:00 +0000</pubDate>
        
        <guid>https://dev-woong.io/p/til-sprite-animation-%EA%B8%B0%EC%B4%88/</guid>
        <description>&lt;img src="https://dev-woong.io/p/til-sprite-animation-%EA%B8%B0%EC%B4%88/title.jpg" alt="Featured image of post [TIL] Sprite, Animation 기초" /&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=jg4nCHgDCFg&amp;amp;list=PLC2Tit6NyVie46nbdEM00wFoojjRlXIcf&amp;amp;index=8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;고박사의 유니티 노트 [Unity 2D Basic] 05-01. 2D Sprite / Animation&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;draw-call--batches&#34;&gt;Draw Call &amp;amp; Batches&lt;/h2&gt;
&lt;h3 id=&#34;draw-call&#34;&gt;Draw Call&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CPU가 GPU에게 Draw 요청하는 것&lt;/li&gt;
&lt;li&gt;이 값이 낮을수록 앱이 가벼우며 기기에 따라 특정 개수 이상 시 프레임 드랍 발생&lt;/li&gt;
&lt;li&gt;모바일의 경우 100개를 넘기지 않는 것을 권장 (요즘 기종은 120Hz를 지원)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;batches&#34;&gt;Batches&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Draw Call 을 포함하는 상위 개념&lt;/li&gt;
&lt;li&gt;Unity 5.0부터 Draw Call 대신 Batches를 기준으로 &lt;code&gt;Stats&lt;/code&gt;에 렌더링 정보를 표시함&lt;/li&gt;
&lt;li&gt;Batches는 &lt;code&gt;Mesh&lt;/code&gt;, &lt;code&gt;Material&lt;/code&gt;, &lt;code&gt;Shader&lt;/code&gt;, &lt;code&gt;Draw Call&lt;/code&gt; 등의 정보를 종합적으로 계산함&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sprite-atlas&#34;&gt;Sprite Atlas&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;여러 이미지 파일을 한 장의 텍스처에 모아 두고 사용하는 것&lt;/li&gt;
&lt;li&gt;Unity는 Sprite &lt;code&gt;Packer&lt;/code&gt;(Legacy)와 &lt;code&gt;Sprite Atlas&lt;/code&gt;를 제공합니다&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sprite-atlas를-사용해야-하는-이유&#34;&gt;Sprite Atlas를 사용해야 하는 이유&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2D 게임에서 배경이나 캐릭터, 적 등을 표현하는데 사용되는 이미지 에셋은 매번 렌더링 할 때마다 각 이미지 에셋 별로 1의 Batches 증가&lt;/li&gt;
&lt;li&gt;예를 들어 게임에 사용되는 캐릭터, 적, 아이템 &lt;strong&gt;모두 다른 이미지를 사용하는 Object가 100&lt;/strong&gt;개 있고, 동시에 게임에 등장한다면 Batches 값은 &lt;strong&gt;100&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;반대로 &lt;strong&gt;동일한 이미지를 사용하는 오브젝트가 100개&lt;/strong&gt; 일 때는 Batches 값은 &lt;strong&gt;1&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Sprite Atlas를 이용해 서로 다른 이미지를 하나의 텍스처에 모아 두고 사용하면 서로 다른 이미지의 오브젝트를 100개 만든다고 해도 Batches 값은 1&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sprite-atlas-사용-시-주의-사항&#34;&gt;Sprite Atlas 사용 시 주의 사항&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;모든 이미지 에셋을 하나의 Sprite Atlas로 묶게 되면 내부의 이미지 하나만 사용해도 해당 Sprite Atlas의 모든 이미지 정보를 불러옴&lt;/li&gt;
&lt;li&gt;한 화면에 함께 사용되는 것 또는 하나의 오브젝트에서 함께 사용되는 것 처럼 관련이 있는 이미지들을 하나의 Sprite Atlas로 묶어주는 것이 좋음&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;texture-asset&#34;&gt;Texture Asset&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://dev-woong.io/GitHub/Github%20Apps%20%ec%84%b8%eb%b6%80%20%ec%84%a4%ec%a0%95%20%eb%b0%8f%20%ec%83%9d%ec%84%b1/1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Texture Asset&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;이미지-분할과-potpower-of-two-규격&#34;&gt;이미지 분할과 POT(Power of Two) 규격&lt;/h3&gt;
&lt;h4 id=&#34;하나의-이미지-에셋에-여러-장의-그림을-그리고-분할하여-사용하는-이유&#34;&gt;하나의 이미지 에셋에 여러 장의 그림을 그리고 분할하여 사용하는 이유&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://dev-woong.io/GitHub/Github%20Apps%20%ec%84%b8%eb%b6%80%20%ec%84%a4%ec%a0%95%20%eb%b0%8f%20%ec%83%9d%ec%84%b1/2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;이미지 크기에 따른 메모리 POT 공간 비교&#34;
	
	
&gt;
&lt;img src=&#34;https://dev-woong.io/GitHub/Github%20Apps%20%ec%84%b8%eb%b6%80%20%ec%84%a4%ec%a0%95%20%eb%b0%8f%20%ec%83%9d%ec%84%b1/3.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;유사한 성격의 이미지를 모아서 제작된 POT 규격 이미지&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;게임에서 사용되는 텍스처를 제작할 때에는 POT 규격으로 제작해야 함
&lt;ul&gt;
&lt;li&gt;POT(Power of Two) : 텍스처의 가로/세로 사이즈가 2의 제곱&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;POT 규격이 아닌 텍스처는 POT 규격으로 변환하기 위해 내부적인 처리를 거치게 되고 이로 인한 메모리 비용 증가&lt;/li&gt;
&lt;li&gt;보통 게임에 사용되는 이미지는 POT 규격으로 제작될 수 없기 때문에 하나의 POT 규격 텍스처에 여러 장의 이미지(유사한 성격을 가진 이미지)를 넣어서 제작한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;animation&#34;&gt;Animation&lt;/h2&gt;
&lt;h3 id=&#34;animation-asset&#34;&gt;Animation Asset&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;하나의 애니메이션 동작을 저장하는 파일(걷기, 뛰기, 공격 등)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2d-sprite-animation&#34;&gt;2D Sprite Animation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Animator Component&lt;/li&gt;
&lt;li&gt;Animator Controller Asset&lt;/li&gt;
&lt;li&gt;Animation Asset&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;animator-controller-asset&#34;&gt;Animator Controller Asset&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;하나의 오브젝트가 가질 수 있는 애니메이션을 묶어서 관리하는 파일&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;animator-component&#34;&gt;Animator Component&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;게임 오브젝트의 애니메이션 재생, 교체 등을 제어하는 역할 수행&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://hits.seeyoufarm.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fdev-woong.io%2F2022.08.17-01&amp;amp;count_bg=%233D91C8&amp;amp;title_bg=%23555555&amp;amp;icon=&amp;amp;icon_color=%23E7E7E7&amp;amp;title=%EC%A1%B0%ED%9A%8C%EC%88%98&amp;amp;edge_flat=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Hits&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Obsidian 설치 및 설정</title>
        <link>https://dev-woong.io/p/obsidian-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%84%A4%EC%A0%95/</link>
        <pubDate>Tue, 16 Aug 2022 00:00:00 +0000</pubDate>
        
        <guid>https://dev-woong.io/p/obsidian-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%84%A4%EC%A0%95/</guid>
        <description>&lt;img src="https://dev-woong.io/p/obsidian-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%84%A4%EC%A0%95/title.jpg" alt="Featured image of post Obsidian 설치 및 설정" /&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=jg4nCHgDCFg&amp;amp;list=PLC2Tit6NyVie46nbdEM00wFoojjRlXIcf&amp;amp;index=8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;고박사의 유니티 노트 [Unity 2D Basic] 05-01. 2D Sprite / Animation&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;draw-call--batches&#34;&gt;Draw Call &amp;amp; Batches&lt;/h2&gt;
&lt;h3 id=&#34;draw-call&#34;&gt;Draw Call&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CPU가 GPU에게 Draw 요청하는 것&lt;/li&gt;
&lt;li&gt;이 값이 낮을수록 앱이 가벼우며 기기에 따라 특정 개수 이상 시 프레임 드랍 발생&lt;/li&gt;
&lt;li&gt;모바일의 경우 100개를 넘기지 않는 것을 권장 (요즘 기종은 120Hz를 지원)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;batches&#34;&gt;Batches&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Draw Call 을 포함하는 상위 개념&lt;/li&gt;
&lt;li&gt;Unity 5.0부터 Draw Call 대신 Batches를 기준으로 &lt;code&gt;Stats&lt;/code&gt;에 렌더링 정보를 표시함&lt;/li&gt;
&lt;li&gt;Batches는 &lt;code&gt;Mesh&lt;/code&gt;, &lt;code&gt;Material&lt;/code&gt;, &lt;code&gt;Shader&lt;/code&gt;, &lt;code&gt;Draw Call&lt;/code&gt; 등의 정보를 종합적으로 계산함&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sprite-atlas&#34;&gt;Sprite Atlas&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;여러 이미지 파일을 한 장의 텍스처에 모아 두고 사용하는 것&lt;/li&gt;
&lt;li&gt;Unity는 Sprite &lt;code&gt;Packer&lt;/code&gt;(Legacy)와 &lt;code&gt;Sprite Atlas&lt;/code&gt;를 제공합니다&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sprite-atlas를-사용해야-하는-이유&#34;&gt;Sprite Atlas를 사용해야 하는 이유&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2D 게임에서 배경이나 캐릭터, 적 등을 표현하는데 사용되는 이미지 에셋은 매번 렌더링 할 때마다 각 이미지 에셋 별로 1의 Batches 증가&lt;/li&gt;
&lt;li&gt;예를 들어 게임에 사용되는 캐릭터, 적, 아이템 &lt;strong&gt;모두 다른 이미지를 사용하는 Object가 100&lt;/strong&gt;개 있고, 동시에 게임에 등장한다면 Batches 값은 &lt;strong&gt;100&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;반대로 &lt;strong&gt;동일한 이미지를 사용하는 오브젝트가 100개&lt;/strong&gt; 일 때는 Batches 값은 &lt;strong&gt;1&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Sprite Atlas를 이용해 서로 다른 이미지를 하나의 텍스처에 모아 두고 사용하면 서로 다른 이미지의 오브젝트를 100개 만든다고 해도 Batches 값은 1&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sprite-atlas-사용-시-주의-사항&#34;&gt;Sprite Atlas 사용 시 주의 사항&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;모든 이미지 에셋을 하나의 Sprite Atlas로 묶게 되면 내부의 이미지 하나만 사용해도 해당 Sprite Atlas의 모든 이미지 정보를 불러옴&lt;/li&gt;
&lt;li&gt;한 화면에 함께 사용되는 것 또는 하나의 오브젝트에서 함께 사용되는 것 처럼 관련이 있는 이미지들을 하나의 Sprite Atlas로 묶어주는 것이 좋음&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;texture-asset&#34;&gt;Texture Asset&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://dev-woong.io/GitHub/Github%20Apps%20%ec%84%b8%eb%b6%80%20%ec%84%a4%ec%a0%95%20%eb%b0%8f%20%ec%83%9d%ec%84%b1/1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Texture Asset&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;이미지-분할과-potpower-of-two-규격&#34;&gt;이미지 분할과 POT(Power of Two) 규격&lt;/h3&gt;
&lt;h4 id=&#34;하나의-이미지-에셋에-여러-장의-그림을-그리고-분할하여-사용하는-이유&#34;&gt;하나의 이미지 에셋에 여러 장의 그림을 그리고 분할하여 사용하는 이유&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://dev-woong.io/GitHub/Github%20Apps%20%ec%84%b8%eb%b6%80%20%ec%84%a4%ec%a0%95%20%eb%b0%8f%20%ec%83%9d%ec%84%b1/2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;이미지 크기에 따른 메모리 POT 공간 비교&#34;
	
	
&gt;
&lt;img src=&#34;https://dev-woong.io/GitHub/Github%20Apps%20%ec%84%b8%eb%b6%80%20%ec%84%a4%ec%a0%95%20%eb%b0%8f%20%ec%83%9d%ec%84%b1/3.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;유사한 성격의 이미지를 모아서 제작된 POT 규격 이미지&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;게임에서 사용되는 텍스처를 제작할 때에는 POT 규격으로 제작해야 함
&lt;ul&gt;
&lt;li&gt;POT(Power of Two) : 텍스처의 가로/세로 사이즈가 2의 제곱&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;POT 규격이 아닌 텍스처는 POT 규격으로 변환하기 위해 내부적인 처리를 거치게 되고 이로 인한 메모리 비용 증가&lt;/li&gt;
&lt;li&gt;보통 게임에 사용되는 이미지는 POT 규격으로 제작될 수 없기 때문에 하나의 POT 규격 텍스처에 여러 장의 이미지(유사한 성격을 가진 이미지)를 넣어서 제작한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;animation&#34;&gt;Animation&lt;/h2&gt;
&lt;h3 id=&#34;animation-asset&#34;&gt;Animation Asset&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;하나의 애니메이션 동작을 저장하는 파일(걷기, 뛰기, 공격 등)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2d-sprite-animation&#34;&gt;2D Sprite Animation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Animator Component&lt;/li&gt;
&lt;li&gt;Animator Controller Asset&lt;/li&gt;
&lt;li&gt;Animation Asset&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;animator-controller-asset&#34;&gt;Animator Controller Asset&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;하나의 오브젝트가 가질 수 있는 애니메이션을 묶어서 관리하는 파일&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;animator-component&#34;&gt;Animator Component&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;게임 오브젝트의 애니메이션 재생, 교체 등을 제어하는 역할 수행&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://hits.seeyoufarm.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fdev-woong.io%2F2022.08.17-01&amp;amp;count_bg=%233D91C8&amp;amp;title_bg=%23555555&amp;amp;icon=&amp;amp;icon_color=%23E7E7E7&amp;amp;title=%EC%A1%B0%ED%9A%8C%EC%88%98&amp;amp;edge_flat=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Hits&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Github Apps 세부 설정 및 생성</title>
        <link>https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/</link>
        <pubDate>Sun, 14 Aug 2022 00:00:00 +0000</pubDate>
        
        <guid>https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/</guid>
        <description>&lt;img src="https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/github.jpg" alt="Featured image of post Github Apps 세부 설정 및 생성" /&gt;&lt;h2 id=&#34;github-apps-란&#34;&gt;Github Apps 란?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Github에서 동작하는 GitHub API와 통합되는 프로젝트에서 GitHub 데이터에 접근하기 위한 세분화된 권한을 제공하기 때문에 GitHub에서 공식적으로 권장하는 Application 등록 방법입니다.&lt;/p&gt;
&lt;p&gt;GitHub App은 API를 통해 직접 작업을 수행하므로 별도의 봇 또는 서비스 계정이 필요하지 않습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/developers/apps/differences-between-github-apps-and-oauth-apps&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub App과 OAuth App의 차이점&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;github-apps-생성하기&#34;&gt;Github Apps 생성하기&lt;/h2&gt;
&lt;h3 id=&#34;github-로그인&#34;&gt;GitHub 로그인&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/login&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub Login&lt;/a&gt; 페이지에서 로그인합니다.&lt;/p&gt;
&lt;h3 id=&#34;설정-페이지-이동&#34;&gt;설정 페이지 이동&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/1.png&#34;
	width=&#34;1090&#34;
	height=&#34;1120&#34;
	srcset=&#34;https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/1_hu5a4159aff82053c4bb215b6b9949ade4_214223_480x0_resize_box_3.png 480w, https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/1_hu5a4159aff82053c4bb215b6b9949ade4_214223_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;사용자 아이콘 &amp;gt; Settings&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;97&#34;
		data-flex-basis=&#34;233px&#34;
	
&gt;
&lt;img src=&#34;https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/2.png&#34;
	width=&#34;630&#34;
	height=&#34;553&#34;
	srcset=&#34;https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/2_hu58c8c4d4bdafe922b1ac4e7117e56652_43676_480x0_resize_box_3.png 480w, https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/2_hu58c8c4d4bdafe922b1ac4e7117e56652_43676_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Developer Settings&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;113&#34;
		data-flex-basis=&#34;273px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;GitHub 홈 화면에서 우측 상단 사용자 아이콘을 클릭 후 하단의 &lt;code&gt;Setting&lt;/code&gt;를 클릭하면 설정 페이지로 이동됩니다.&lt;/p&gt;
&lt;p&gt;이동 후, 좌측 메뉴 최하단의 &lt;code&gt;Developer settings&lt;/code&gt; 를 클릭합니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/3.png&#34;
	width=&#34;2298&#34;
	height=&#34;676&#34;
	srcset=&#34;https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/3_hu4f0922c10e47c40c53d6e6ee7610607d_139661_480x0_resize_box_3.png 480w, https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/3_hu4f0922c10e47c40c53d6e6ee7610607d_139661_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;GitHub Apps &amp;gt; New GitHub App&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;339&#34;
		data-flex-basis=&#34;815px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Developer Setting 화면에서 좌측의 &lt;code&gt;GitHub Apps&lt;/code&gt;를 클릭하고 &lt;code&gt;New GitHub App&lt;/code&gt;을 클릭합니다.
Password 또는 2-Factor 인증, 또는 휴대폰 앱을 통한 인증을 진행하면 GitHub Apps 설정 화면으로 이동합니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/4.png&#34;
	width=&#34;1854&#34;
	height=&#34;1010&#34;
	srcset=&#34;https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/4_hu81380516549832144ba1c3275a4b4a08_130444_480x0_resize_box_3.png 480w, https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/4_hu81380516549832144ba1c3275a4b4a08_130444_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Confirm Access&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;183&#34;
		data-flex-basis=&#34;440px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;세부-설정&#34;&gt;세부 설정&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;* 표시가 붙어있는 항목은 필수 입력 항목입니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;register-new-github-app&#34;&gt;Register new GitHub App&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/5.png&#34;
	width=&#34;1518&#34;
	height=&#34;1046&#34;
	srcset=&#34;https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/5_hudf556bb0f1fa7e9c4e76f2fc27f234ba_92409_480x0_resize_box_3.png 480w, https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/5_hudf556bb0f1fa7e9c4e76f2fc27f234ba_92409_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;145&#34;
		data-flex-basis=&#34;348px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub App Name : 생성할 GitHub App 이름 (기존 GitHub 계정과 동일한 이름 불가)&lt;/li&gt;
&lt;li&gt;This is displayed to users of your GitHub App : GitHub App에 대한 설명(마크다운 형식 지원)&lt;/li&gt;
&lt;li&gt;Homepage URL : 앱 웹사이트의 전체 URL
&lt;ul&gt;
&lt;li&gt;특별히 해당 앱을 사용하는 사이트가 없는 경우 https://127.0.0.1 (루프백)등으로 입력&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;identifying-and-authorizing-users&#34;&gt;Identifying and authorizing users&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/6.png&#34;
	width=&#34;1514&#34;
	height=&#34;754&#34;
	srcset=&#34;https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/6_huc772025c2800c7d805cff3ade3ab1d44_159759_480x0_resize_box_3.png 480w, https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/6_huc772025c2800c7d805cff3ade3ab1d44_159759_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;200&#34;
		data-flex-basis=&#34;481px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Callback URL : 사용자가 해당 앱을 승인한 후 리디렉션 될 URL
&lt;ul&gt;
&lt;li&gt;이 URL은 앱이 사용자-서버 요청을 식별/승인해야 하는 경우 사용&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Add Callback URL&lt;/code&gt; 을 통해 최대 10개의 추가 Callback URL을 사용 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Expire user authorization : 액세스 토큰에 대한 만료 설정
&lt;ul&gt;
&lt;li&gt;해당 옵션 선택 시 액세스 토큰이 만료될 때 업데이트된 토큰을 요청할 수 있는 refresh_token 제공&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/apps/building-github-apps/refreshing-user-to-server-access-tokens&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub Docs - 사용자-서버 액세스 토큰 새로 고침&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Request user ahtorization (OAuth) during installation : GitHub App에 사용자 권한 부여(OAuth)
&lt;ul&gt;
&lt;li&gt;해당 옵션 활성화 시 Callback URL이 필수 입력 항목으로 전환되고, 아래 &lt;a class=&#34;link&#34; href=&#34;#post-installation&#34; &gt;Post Installation&lt;/a&gt;의 Setup URL은 비활성화됨&lt;/li&gt;
&lt;li&gt;GitHub App 생성 후 &lt;code&gt;Callback URL&lt;/code&gt; 로 리디렉션 되면 &lt;code&gt;Callback Code&lt;/code&gt; 를 Get 파라미터로 전달받게 되고 이것으로 액세스 토큰을 발급 후 API에 액세스&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/apps/installing-github-apps/#authorizing-users-during-installation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub Docs - Authorizing users during installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Enable Device Flow : CLI 도구 또는 Git 자격 증명 관리자와 같은 헤드리스 앱 권한 부여
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps#device-flow&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub Docs - Device Flow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;post-installation&#34;&gt;Post installation&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/9.png&#34;
	width=&#34;1510&#34;
	height=&#34;406&#34;
	srcset=&#34;https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/9_hu196dd6f05db8fc4d58d3cc31245a08ff_63692_480x0_resize_box_3.png 480w, https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/9_hu196dd6f05db8fc4d58d3cc31245a08ff_63692_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;371&#34;
		data-flex-basis=&#34;892px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Setup URL : 추가 설정이 필요한 경우 GitHub App 구성 후 원하는 URL으로 리디렉션
&lt;ul&gt;
&lt;li&gt;상단 &lt;a class=&#34;link&#34; href=&#34;#identifying-and-authorizing-users&#34; &gt;Identifying and authorizing users&lt;/a&gt; 에서 &lt;code&gt;Request user ahtorization (OAuth) during installation&lt;/code&gt; 체크 시 비활성화&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Redirect on update : GitHub App이 업데이트된 후 사용자를 &lt;code&gt;Setup URL&lt;/code&gt; 로 리디렉션 (예: 리포지터리 추가/제거)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;webhook&#34;&gt;Webhook&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/10.png&#34;
	width=&#34;1506&#34;
	height=&#34;622&#34;
	srcset=&#34;https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/10_huef08d2e218873fd5962d71b814494f4c_84085_480x0_resize_box_3.png 480w, https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/10_huef08d2e218873fd5962d71b814494f4c_84085_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;242&#34;
		data-flex-basis=&#34;581px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Active : 웹훅 활성화 설정&lt;/li&gt;
&lt;li&gt;Webhook URL : App에서 이벤트가 발생하는 경우 데이터를 받을 URL&lt;/li&gt;
&lt;li&gt;Webhook Secret : 원하는 사용자만 hook 을 받을 수 있도록 설정하는 선택적 보안 토큰&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;repository-permissions&#34;&gt;Repository permissions&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Permission(권한)은 총 3가지 상태로 지정할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No Access : 허용하지 않음&lt;/li&gt;
&lt;li&gt;Read-only : 읽기만 허용&lt;/li&gt;
&lt;li&gt;Read and Write : 읽기/쓰기 허용&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Actions&lt;/strong&gt;&lt;/a&gt; : GitHub의 CI/CD 플랫폼인 GitHub Actions 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-administration&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Administration&lt;/strong&gt; &lt;/a&gt; : 리포지토리 생성, 삭제, 설정, 팀 및 Collaborators 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-checks&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Checks&lt;/strong&gt;&lt;/a&gt; : 코드 검사 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Code scanning alerts&lt;/strong&gt;&lt;/a&gt; : 리포지토리의 보안 탭에 있는 코드 취약점 스캔 경고 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Codespaces&lt;/strong&gt;&lt;/a&gt; : GitHub 내장 IDE인 Codespace 생성, 편집, 삭제 등 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Codespaces lifecycle admin&lt;/strong&gt;&lt;/a&gt; : 특정 사용자에 대한 Codespace 시작/중지 등 lifecycle 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Codespaces metadata&lt;/strong&gt;&lt;/a&gt; : container 및 machine 등에 대한 Codespace 메타데이터 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Codespaces secrets&lt;/strong&gt;&lt;/a&gt; : Codespace에서 액세스할 수 있는 리포지토리에 대한 비밀 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-statuses&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Commit statuses&lt;/strong&gt;&lt;/a&gt; : 커밋 상태 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-contents&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Contents&lt;/strong&gt;&lt;/a&gt; : 리포지토리, 커밋, 브랜치, 다운로드, 릴리즈 및 병합 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v4/object/repositoryvulnerabilityalert/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Dependabot alerts&lt;/strong&gt;&lt;/a&gt; : GitHub 종속성 관리 기능인 Dependabot의 경고 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Dependabot secrets&lt;/strong&gt;&lt;/a&gt; : Dependabot의 리포지토리 비밀 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-deployments&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Deployments&lt;/strong&gt;&lt;/a&gt; : 배포 및 배포 상태 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Discussions&lt;/strong&gt;&lt;/a&gt; : 토론 및 의견, 레이블 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Environments&lt;/strong&gt;&lt;/a&gt; : 리포지토리 환경 변수 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-issues&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Issues&lt;/strong&gt;&lt;/a&gt; : 이슈 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Merge queues&lt;/strong&gt;&lt;/a&gt; 리포지토리의 병합 대기열 관리 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#metadata-permissions&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Metadata&lt;/strong&gt;&lt;/a&gt; : 리포지터리 검색, Collaborators 나열, 리포지토리 메타데이터 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-packages&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Packages&lt;/strong&gt;&lt;/a&gt; : GitHub 패키지 플랫폼 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-pages&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Pages&lt;/strong&gt;&lt;/a&gt; : 정적 웹 호스팅 서비스 Github Pages 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-repository-projects&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Projects&lt;/strong&gt;&lt;/a&gt; : Github Projects 기능의 열 및 카드 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-pull-requests&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Pull requests&lt;/strong&gt;&lt;/a&gt; : Pull Request 기능 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Secret scanning alerts&lt;/strong&gt;&lt;/a&gt; : 비밀 스캔 알림 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Secrets&lt;/strong&gt;&lt;/a&gt; : 리포지토리 비밀 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-single-file&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Single file&lt;/strong&gt;&lt;/a&gt; : 하나의 파일만 관리하는 권한(..??)&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-repository-hooks&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Webhooks&lt;/strong&gt;&lt;/a&gt; : 웹훅 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Workflows&lt;/strong&gt;&lt;/a&gt; : GitHub Actions Workflow 파일 업데이트 관련 권한&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;organization-permissions&#34;&gt;Organization permissions&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-organization-administration&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Administration&lt;/strong&gt;&lt;/a&gt; : 조직에 대한 액세스 관리 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-organization-user-blocking&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Blocking users&lt;/strong&gt;&lt;/a&gt; : 사용자 차단 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-organization-events&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Events&lt;/strong&gt;&lt;/a&gt; : 조직의 트리거된(?) 이벤트 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-members&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Members&lt;/strong&gt;&lt;/a&gt; : 조직 구성원 및 팀 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Organization codespaces&lt;/strong&gt;&lt;/a&gt; : 조직의 Codespaces 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Organization codespaces secrets&lt;/strong&gt;&lt;/a&gt; : 조직의 Codespaces 비밀 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Organization dependabot secrets&lt;/strong&gt;&lt;/a&gt; : 조직의 Dependabot 비밀 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Plan&lt;/strong&gt;&lt;/a&gt; : 조직의 Plan(라이센스) 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-organization-projects&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Projects&lt;/strong&gt;&lt;/a&gt; : 조직 프로젝트 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Secrets&lt;/strong&gt;&lt;/a&gt; : 조직의 Actions 비밀 관리 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Self-hosted runners&lt;/strong&gt;&lt;/a&gt; : 조직에서 사용할 수 있는 Actions 자체 호스팅 실행자 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-team-discussions&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Team discussions&lt;/strong&gt;&lt;/a&gt; : 팀 토론 및 관련 의견 관리 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-organization-hooks&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Webhooks&lt;/strong&gt;&lt;/a&gt; : 조직의 웹훅 관련 권한&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;user-permissions&#34;&gt;User permissions&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-blocking&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Block another user&lt;/strong&gt;&lt;/a&gt; : 사용자 차단 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Codespaces user secrets&lt;/strong&gt;&lt;/a&gt; : Codespace 비밀 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-emails&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Email addresses&lt;/strong&gt;&lt;/a&gt; : 사용자의 이메일 주소 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-followers&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Followers&lt;/strong&gt;&lt;/a&gt; : 사용자의 팔로워 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-gpg-keys&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;GPG keys&lt;/strong&gt;&lt;/a&gt; : 사용자의 GPG 키 관리 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Gists&lt;/strong&gt;&lt;/a&gt; : 사용자의 GitHub Gists(코드, 메모, 로그 등 공유 기능) 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-keys&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Git SSH keys&lt;/strong&gt;&lt;/a&gt; : Git을 통해 접근할 때에 사용되는 SSH 키 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-interaction-limits&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Interaction limits&lt;/strong&gt;&lt;/a&gt; : 리포지토리 상호 작용 제한 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Plan&lt;/strong&gt;&lt;/a&gt; : 사용자의 Plan(라이센스) 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-profile&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Profile&lt;/strong&gt;&lt;/a&gt; : 사용자의 프로필 설정 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-starring&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Starring&lt;/strong&gt;&lt;/a&gt; : 사용자가 Starring한 리포지토리 관련 권한&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/v3/apps/permissions/#permission-on-watching&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Watching&lt;/strong&gt;&lt;/a&gt; : 사용자가 Watching하는 저장소 관련 권한&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;subscribe-to-events&#34;&gt;Subscribe to events&lt;/h4&gt;
&lt;p&gt;선택한 권한에 대해 구독할 이벤트를 선택합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Meta : 이 앱이 삭제되고 연결된 후크가 제거되는 경우&lt;/li&gt;
&lt;li&gt;Security Advisory : 보안 권고가 게시, 업데이트 또는 철회되는 경우&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;생성-완료&#34;&gt;생성 완료&lt;/h3&gt;
&lt;p&gt;최초 생성 이후에는 상단에 노란 바탕으로 경고 메시지가 발생하게 되는데 생성한 GitHub App에 Private Key가 없기 때문에 발생하는 문제입니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/11.png&#34;
	width=&#34;1672&#34;
	height=&#34;464&#34;
	srcset=&#34;https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/11_hud36e091f50ddc6c25c8ab094f0d76def_93381_480x0_resize_box_3.png 480w, https://dev-woong.io/p/github-apps-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%83%9D%EC%84%B1/11_hud36e091f50ddc6c25c8ab094f0d76def_93381_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;360&#34;
		data-flex-basis=&#34;864px&#34;
	
&gt;
하단의 Private keys 에서 &lt;code&gt;Generate a private key&lt;/code&gt; 를 클릭해 Private Key를 하나 생성해주면 앱 사용 준비가 완료됩니다. (필자의 경우 하나의 Private key가 생성되어있는 상태)&lt;/p&gt;
&lt;h3 id=&#34;마무리&#34;&gt;마무리&lt;/h3&gt;
&lt;p&gt;생성한 GitHub App을 이용하면 GitKraken, Gitter 등의 써드파티 앱 처럼 GitHub와 통합되는 앱을 생성할 수 있는 것으로 보입니다.&lt;/p&gt;
&lt;p&gt;해당 문서는 공식 문서의 비공식 번역본 정도로 참고해주시면 감사하겠으며 추가적으로 해당 앱을 활용하며 이해도가 높아지게 된다면 세부적인 내용들에 대해서 다시 다루어보겠습니다.&lt;/p&gt;
&lt;p&gt;참고 자료 : &lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://docs.github.com/en/developers/apps/getting-started-with-apps/about-apps&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://hits.seeyoufarm.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fdev-woong.io%2F2022.08.16-01&amp;amp;count_bg=%233D91C8&amp;amp;title_bg=%23555555&amp;amp;icon=&amp;amp;icon_color=%23E7E7E7&amp;amp;title=%EC%A1%B0%ED%9A%8C%EC%88%98&amp;amp;edge_flat=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Hits&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>GitHub Personal Access Token 생성하기</title>
        <link>https://dev-woong.io/p/github-personal-access-token-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</link>
        <pubDate>Tue, 09 Aug 2022 00:00:00 +0000</pubDate>
        
        <guid>https://dev-woong.io/p/github-personal-access-token-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</guid>
        <description>&lt;img src="https://dev-woong.io/p/github-personal-access-token-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/github.jpg" alt="Featured image of post GitHub Personal Access Token 생성하기" /&gt;&lt;h2 id=&#34;access-token-이란&#34;&gt;Access Token 이란?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;GitHub에서는 HTTPS 에서의 ID/Password 인증 방식을 금지하고 Access Token 인증 방식으로 전환되었습니다.&lt;/p&gt;
&lt;p&gt;Personal Access Token은 HTTPS 인증 시 Git의 암호 대신 사용하거나 API를 인증하는 데 사용할 수 있는 값 입니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;personal-access-token-생성&#34;&gt;Personal Access Token 생성&lt;/h2&gt;
&lt;h3 id=&#34;github-로그인&#34;&gt;GitHub 로그인&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/login&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub Login&lt;/a&gt; 페이지에서 로그인합니다.&lt;/p&gt;
&lt;h3 id=&#34;설정-페이지-이동&#34;&gt;설정 페이지 이동&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://dev-woong.io/p/github-personal-access-token-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/1.png&#34;
	width=&#34;1090&#34;
	height=&#34;1120&#34;
	srcset=&#34;https://dev-woong.io/p/github-personal-access-token-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/1_hu5a4159aff82053c4bb215b6b9949ade4_214223_480x0_resize_box_3.png 480w, https://dev-woong.io/p/github-personal-access-token-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/1_hu5a4159aff82053c4bb215b6b9949ade4_214223_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;사용자 아이콘 &amp;gt; Settings&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;97&#34;
		data-flex-basis=&#34;233px&#34;
	
&gt;
&lt;img src=&#34;https://dev-woong.io/p/github-personal-access-token-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/2.png&#34;
	width=&#34;630&#34;
	height=&#34;553&#34;
	srcset=&#34;https://dev-woong.io/p/github-personal-access-token-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/2_hu58c8c4d4bdafe922b1ac4e7117e56652_43676_480x0_resize_box_3.png 480w, https://dev-woong.io/p/github-personal-access-token-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/2_hu58c8c4d4bdafe922b1ac4e7117e56652_43676_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Developer Settings&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;113&#34;
		data-flex-basis=&#34;273px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;GitHub 홈 화면에서 우측 상단 사용자 아이콘을 클릭 후 하단의 &lt;code&gt;Setting&lt;/code&gt;를 클릭하면 설정 페이지로 이동됩니다.&lt;/p&gt;
&lt;p&gt;이동 후, 좌측 메뉴 최하단의 &lt;code&gt;Developer settings&lt;/code&gt; 를 클릭합니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dev-woong.io/p/github-personal-access-token-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/3.png&#34;
	width=&#34;2534&#34;
	height=&#34;898&#34;
	srcset=&#34;https://dev-woong.io/p/github-personal-access-token-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/3_hu478dab60592803182d4abd31cabdadae_216381_480x0_resize_box_3.png 480w, https://dev-woong.io/p/github-personal-access-token-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/3_hu478dab60592803182d4abd31cabdadae_216381_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Personal Access Token &amp;gt; Generate new token&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;282&#34;
		data-flex-basis=&#34;677px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Developer Setting 화면에서 좌측의 &lt;code&gt;Personal access tokens&lt;/code&gt;를 클릭하고 &lt;code&gt;Generate new token&lt;/code&gt;을 클릭합니다.&lt;/p&gt;
&lt;p&gt;(작성자는 기존에 생성한 토큰이 한 개 있는 상태이므로 표시되는 화면이 다를 수 있습니다.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://dev-woong.io/p/github-personal-access-token-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/4.png&#34;
	width=&#34;1774&#34;
	height=&#34;3312&#34;
	srcset=&#34;https://dev-woong.io/p/github-personal-access-token-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/4_hu6e425468034d6e379c23e4dccaa738d6_638435_480x0_resize_box_3.png 480w, https://dev-woong.io/p/github-personal-access-token-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/4_hu6e425468034d6e379c23e4dccaa738d6_638435_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;토큰 이름, 만료기간, 권한 설정 &amp;gt; Generate token&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;53&#34;
		data-flex-basis=&#34;128px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;토큰 이름 : 자유롭게 작성&lt;/li&gt;
&lt;li&gt;만료 기간 : 자유롭게 선택하거나, 만료되지 않도록 설정&lt;/li&gt;
&lt;li&gt;토큰 권한 : git 로그인 또는 API 사용 시에 필요한 만큼의 권한 할당&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;token-생성-완료&#34;&gt;Token 생성 완료&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://dev-woong.io/p/github-personal-access-token-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/5.png&#34;
	width=&#34;1766&#34;
	height=&#34;940&#34;
	srcset=&#34;https://dev-woong.io/p/github-personal-access-token-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/5_huc1270912fea68504cc96ceeb9537422b_218102_480x0_resize_box_3.png 480w, https://dev-woong.io/p/github-personal-access-token-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/5_huc1270912fea68504cc96ceeb9537422b_218102_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Personal Access Token 발급 완료&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;187&#34;
		data-flex-basis=&#34;450px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;이제 생성한 토큰으로 HTTPS Url을 이용한 Clone 요청이나, GitHub의 여러 API(RestFul, GraphQL)등을 이용할 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://hits.seeyoufarm.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fdev-woong.io%2F2022.08.11-01&amp;amp;count_bg=%233D91C8&amp;amp;title_bg=%23555555&amp;amp;icon=&amp;amp;icon_color=%23E7E7E7&amp;amp;title=%EC%A1%B0%ED%9A%8C%EC%88%98&amp;amp;edge_flat=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Hits&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>About</title>
        <link>https://dev-woong.io/about/</link>
        <pubDate>Sun, 07 Aug 2022 00:00:00 +0000</pubDate>
        
        <guid>https://dev-woong.io/about/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://dev-woong.io/about/dev-woong.jpeg&#34;
	width=&#34;1280&#34;
	height=&#34;961&#34;
	srcset=&#34;https://dev-woong.io/about/dev-woong_hua91ce9141cade6cce2296aeebd515693_181308_480x0_resize_q75_box.jpeg 480w, https://dev-woong.io/about/dev-woong_hua91ce9141cade6cce2296aeebd515693_181308_1024x0_resize_q75_box.jpeg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;개발자 Dev-Woong&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;319px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;소개&#34;&gt;소개&lt;/h2&gt;
&lt;p&gt;1996.12.05 (27) / 서울특별시 서초구&lt;/p&gt;
&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;E-Mail&lt;/strong&gt; : &lt;a class=&#34;link&#34; href=&#34;mailto:intajon@gmail.com&#34; &gt;intajon@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;학력&#34;&gt;학력&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;2015&lt;/code&gt; 경민IT고등학교 정보통신과 졸업&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2016&lt;/code&gt; 한국IT직업전문학교 융합컴퓨터보안학과 입학&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2021&lt;/code&gt; 정보보호학 학사 학위 취득&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;기술-스택&#34;&gt;기술 스택&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/.NET%20Core-512BD4?style=flat-square&amp;amp;logo=dotnet&amp;amp;logoColor=white&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;https://img.shields.io/badge/C%20Sharp-239120?style=flat-square&amp;amp;logo=csharp&amp;amp;logoColor=white&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;https://img.shields.io/badge/Unity-FFFFFF?style=flat-square&amp;amp;logo=unity&amp;amp;logoColor=black&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Git-F05032?style=flat-square&amp;amp;logo=git&amp;amp;logoColor=white&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;https://img.shields.io/badge/Github-181717?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=white&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;https://img.shields.io/badge/SourceTree-0052CC?style=flat-square&amp;amp;logo=sourcetree&amp;amp;logoColor=white&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;https://img.shields.io/badge/GitKraken-179287?style=flat-square&amp;amp;logo=gitkraken&amp;amp;logoColor=white&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Mac%20OS-333333?style=flat-square&amp;amp;logo=apple&amp;amp;logoColor=white&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;https://img.shields.io/badge/Linux-DC8634?style=flat-square&amp;amp;logo=linux&amp;amp;logoColor=white&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;https://img.shields.io/badge/Windows-0078D6?style=flat-square&amp;amp;logo=Windows&amp;amp;logoColor=white&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Jetbrains%20Rider-000000?style=flat-square&amp;amp;logo=rider&amp;amp;logoColor=white&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;https://img.shields.io/badge/Visual%20Studio-5C2D91?style=flat-square&amp;amp;logo=VisualStudio&amp;amp;logoColor=white&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;https://img.shields.io/badge/Visual%20Studio%20Code-007ACC?style=flat-square&amp;amp;logo=VisualStudioCode&amp;amp;logoColor=white&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;자격증&#34;&gt;자격증&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;2021&lt;/code&gt; 정보처리기사&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2021&lt;/code&gt; 정보보안산업기사&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2016&lt;/code&gt; 네트워크관리사 2급&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2016&lt;/code&gt; 1종보통운전면허&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2014&lt;/code&gt; 전자계산기기능사&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2012&lt;/code&gt; 워드프로세서 1급&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;경력-사항&#34;&gt;경력 사항&lt;/h2&gt;
&lt;h3 id=&#34;이루온아이앤에스httpwwweluoninscom-시스템-엔지니어&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.eluonins.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;code&gt;이루온아이앤에스&lt;/code&gt;&lt;/a&gt; 시스템 엔지니어&lt;/h3&gt;
&lt;p&gt;2020.06 ~ 2022.01 (1년 6개월)&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;스토리지 데이터 이전 • 전환 작업 (약 5억 건 이상 데이터)&lt;/li&gt;
&lt;li&gt;국회방송, 매일경제 등 통합 시스템 유지보수(스토리지 및 서버)&lt;/li&gt;
&lt;li&gt;서버, 스토리지 개선 사업 또는 신규 장비 도입 사업 참여&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;대한민국-육군-정보보호병&#34;&gt;&lt;code&gt;대한민국 육군&lt;/code&gt; 정보보호병&lt;/h3&gt;
&lt;p&gt;2018.07 ~ 2020.03 (1년 8개월)&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;정기 점검 스크립트(C#) 코드 리팩토링&lt;/li&gt;
&lt;li&gt;정보보호 체계 관제, 보호 정책 수립 및 적용&lt;/li&gt;
&lt;li&gt;육군 인트라넷 계정 관리 및 홈페이지 관리&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;leantech-ar-어플리케이션-개발&#34;&gt;&lt;code&gt;Leantech&lt;/code&gt; AR 어플리케이션 개발&lt;/h3&gt;
&lt;p&gt;2018.02 ~ 2018.07 (6개월)&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Unity - Vuforia Engine을 통한 도면 타겟 AR 모델링&lt;/li&gt;
&lt;li&gt;UGUI를 통한 UI 생성 및 가변 해상도 대응을 위한 반응형 설계&lt;/li&gt;
&lt;li&gt;홈페이지 가독성 및 번역 호환성을 위한 이미지 텍스트 치환&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>Archives</title>
        <link>https://dev-woong.io/archives/</link>
        <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
        
        <guid>https://dev-woong.io/archives/</guid>
        <description></description>
        </item>
        <item>
        <title></title>
        <link>https://dev-woong.io/template/hugo-hits/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://dev-woong.io/template/hugo-hits/</guid>
        <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://hits.seeyoufarm.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fdev-woong.io%2F2022.08.16-0001&amp;amp;count_bg=%233D91C8&amp;amp;title_bg=%23555555&amp;amp;icon=&amp;amp;icon_color=%23E7E7E7&amp;amp;title=%EC%A1%B0%ED%9A%8C%EC%88%98&amp;amp;edge_flat=true&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Hits&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title></title>
        <link>https://dev-woong.io/template/task/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://dev-woong.io/template/task/</guid>
        <description>&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Task 1&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Task 2&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Task 3&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>.NET</title>
        <link>https://dev-woong.io/categories/.net/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://dev-woong.io/categories/.net/</guid>
        <description>&lt;img src="https://dev-woong.io/categories/.net/dotnet.jpg" alt="Featured image of post .NET" /&gt;</description>
        </item>
        <item>
        <title>GitHub</title>
        <link>https://dev-woong.io/categories/github/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://dev-woong.io/categories/github/</guid>
        <description>&lt;img src="https://dev-woong.io/categories/github/github.png" alt="Featured image of post GitHub" /&gt;</description>
        </item>
        <item>
        <title>Links</title>
        <link>https://dev-woong.io/links/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://dev-woong.io/links/</guid>
        <description>&lt;p&gt;To use this feature, add &lt;code&gt;links&lt;/code&gt; section to frontmatter.&lt;/p&gt;
&lt;p&gt;This page&amp;rsquo;s frontmatter:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;links&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;GitHub is the world&amp;#39;s largest software development platform.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;website&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://github.com&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TypeScript&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TypeScript is a typed superset of JavaScript that compiles to plain JavaScript.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;website&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://www.typescriptlang.org&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ts-logo-128.jpg&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;image&lt;/code&gt; field accepts both local and external images.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Search</title>
        <link>https://dev-woong.io/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://dev-woong.io/search/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
